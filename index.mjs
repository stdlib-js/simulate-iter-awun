// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-iterator-like@v0.2.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import{isPrimitive as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@v0.2.0-esm/index.mjs";import{factory as j}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-uniform@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-sqrt-three@v0.2.0-esm/index.mjs";function g(c,f,b){var y,x,w,L,T;if(!s(c))throw new TypeError(u("invalid argument. First argument must be an iterator. Value: `%s`.",c));if(!r(f))throw new TypeError(u("invalid argument. Second argument must be a positive number. Value: `%s`.",f));if(x={copy:!0},arguments.length>2){if(!i(b))throw new TypeError(u("invalid argument. Third argument must be an object. Value: `%s`.",b));if(a(b,"copy")&&(x.copy=b.copy,!d(b.copy)))throw new TypeError(u("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",b.copy));if(a(b,"prng")){if(!o(b.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",b.prng));x.prng=b.prng}else if(a(b,"state")){if(x.state=b.state,!m(b.state))throw new TypeError(u("invalid option. `%s` option must be a Uint32Array. Option: `%s`.","state",b.state))}else if(a(b,"seed")&&(x.seed=b.seed,void 0===b.seed))throw new TypeError(u("invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.","seed",b.seed))}return y=j(-(T=f*v),T,x),e(w={},"next",R),e(w,"return",V),h&&o(c[h])&&e(w,h,k),b&&b.prng?(e(w,"seed",null),e(w,"seedLength",null),n(w,"state",p(null),l),e(w,"stateLength",null),e(w,"byteLength",null),e(w,"PRNG",b.prng)):(t(w,"seed",E),t(w,"seedLength",N),n(w,"state",q,G),t(w,"stateLength",O),t(w,"byteLength",P),e(w,"PRNG",y.PRNG)),w;function E(){return y.seed}function N(){return y.seedLength}function O(){return y.stateLength}function P(){return y.byteLength}function q(){return y.state}function G(e){y.state=e}function R(){var e;return L?{done:!0}:(e=c.next()).done?(L=!0,e):{value:e="number"==typeof e.value?e.value+y():NaN,done:!1}}function V(e){return L=!0,arguments.length?{value:e,done:!0}:{done:!0}}function k(){return g(c[h](),f,x)}}export{g as default};
//# sourceMappingURL=index.mjs.map
